{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAgBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAvBAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAA6BC,GAC3BA,EAAIC,iBACJ,MAAMZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,GAAWH,EAAII,OACpC,IAAIC,EAAaC,OAAOjB,EAAMkB,OAC9B,MAAMC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,QAkBpC,SAAsBG,EAAOR,EAAMC,GACjC,IAAK,IAAIQ,EAAW,EAAGA,GAAYR,EAAQQ,GAAY,EACrDxB,EAAcwB,EAAUD,GACrBE,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqB3B,QAAiBC,MAAU,IAGnD2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoB7B,QAAeC,MAAU,IAGnDqB,GAASR,C,EA9BXgB,CAAab,EAAYG,EAAWC,GACpCT,EAAImB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onMakePromisesClick);\n\nfunction onMakePromisesClick(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.target;\n  let delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n  makePromises(delayValue, stepValue, amountValue);\n  evt.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction makePromises(delay, step, amount) {\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","step","amount","target","delayValue","Number","value","stepValue","amountValue","delay1","position1","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$makePromises","currentTarget","reset"],"version":3,"file":"03-promises.93165d78.js.map"}